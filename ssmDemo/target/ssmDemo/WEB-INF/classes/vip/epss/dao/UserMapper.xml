<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.epss.dao.UserMapper">
  <resultMap id="BaseResultMap" type="vip.epss.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cardId" jdbcType="VARCHAR" property="cardid" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="realName" jdbcType="VARCHAR" property="realname" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="screctQuestion" jdbcType="VARCHAR" property="screctquestion" />
    <result column="avaUrl" jdbcType="LONGVARCHAR" property="avaurl" />
    <result column="cardUrl" jdbcType="LONGVARCHAR" property="cardurl" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="vip.epss.domain.User">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cardId, nickName, realName, age, password, sex, screctQuestion, avaUrl, cardUrl
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="vip.epss.domain.UserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="vip.epss.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getPswdByUserName" parameterType="java.lang.String" resultType="java.lang.String">
    select password
    from user
    where name=#{userName,jdbcType=VARCHAR}
  </select>
  <select id="getPswdByCardId" parameterType="java.lang.String" resultType="java.lang.String">
    select password
    from user
    where cardId=#{cardId,jdbcType=VARCHAR}
  </select>
<!--  <select id="getIdByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">-->
<!--    select id-->
<!--    from user-->
<!--    where name=#{userName,jdbcType=VARCHAR}-->
<!--  </select>-->
  <select id="getIdByCardId" parameterType="java.lang.String" resultType="java.lang.Integer">
    select id
    from user
    where cardId=#{cardId,jdbcType=VARCHAR}
  </select>
  <select id="getRealNameByUserId" parameterType="java.lang.Integer" resultType="java.lang.String">
    select realName
    from user
    where id=#{id,jdbcType=INTEGER}
  </select>
  <select id="getSQById" parameterType="java.lang.Integer" resultType="java.lang.String">
    select screctQuestion
    from user
    where id=#{id,jdbcType=INTEGER}
  </select>
  <select id="getPostByUserId" parameterType="java.lang.Integer" resultType="vip.epss.domain.Post">
    select *
    from post
    where userId=#{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="vip.epss.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="vip.epss.domain.User">
    insert into user (id, cardId, nickName, 
      realName, age, password, 
      sex, screctQuestion, avaUrl, 
      cardUrl, introduction)
    values (#{id,jdbcType=INTEGER}, #{cardid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{screctquestion,jdbcType=VARCHAR}, #{avaurl,jdbcType=LONGVARCHAR},
      #{cardurl,jdbcType=LONGVARCHAR}, #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="vip.epss.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cardid != null">
        cardId,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="realname != null">
        realName,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="screctquestion != null">
        screctQuestion,
      </if>
      <if test="avaurl != null">
        avaUrl,
      </if>
      <if test="cardurl != null">
        cardUrl,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cardid != null">
        #{cardid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="screctquestion != null">
        #{screctquestion,jdbcType=VARCHAR},
      </if>
      <if test="avaurl != null">
        #{avaurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="cardurl != null">
        #{cardurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vip.epss.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cardid != null">
        cardId = #{record.cardid,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realName = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.screctquestion != null">
        screctQuestion = #{record.screctquestion,jdbcType=VARCHAR},
      </if>
      <if test="record.avaurl != null">
        avaUrl = #{record.avaurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.cardurl != null">
        cardUrl = #{record.cardurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      cardId = #{record.cardid,jdbcType=VARCHAR},
      nickName = #{record.nickname,jdbcType=VARCHAR},
      realName = #{record.realname,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      screctQuestion = #{record.screctquestion,jdbcType=VARCHAR},
      avaUrl = #{record.avaurl,jdbcType=LONGVARCHAR},
      cardUrl = #{record.cardurl,jdbcType=LONGVARCHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      cardId = #{record.cardid,jdbcType=VARCHAR},
      nickName = #{record.nickname,jdbcType=VARCHAR},
      realName = #{record.realname,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      screctQuestion = #{record.screctquestion,jdbcType=VARCHAR},
      avaUrl = #{record.avaurl,jdbcType=LONGVARCHAR},
      cardUrl = #{record.cardurl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vip.epss.domain.User">
    update user
    <set>
      <if test="cardid != null">
        cardId = #{cardid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="screctquestion != null">
        screctQuestion = #{screctquestion,jdbcType=VARCHAR},
      </if>
      <if test="avaurl != null">
        avaUrl = #{avaurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="cardurl != null">
        cardUrl = #{cardurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="vip.epss.domain.User">
    update user
    set cardId = #{cardid,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      screctQuestion = #{screctquestion,jdbcType=VARCHAR},
      avaUrl = #{avaurl,jdbcType=LONGVARCHAR},
      cardUrl = #{cardurl,jdbcType=LONGVARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="vip.epss.domain.User">
    update user
    set cardId = #{cardid,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      screctQuestion = #{screctquestion,jdbcType=VARCHAR},
      avaUrl = #{avaurl,jdbcType=LONGVARCHAR},
      cardUrl = #{cardurl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePswdById">
    update user
    set password=#{password,jdbcType=VARCHAR}
    where id=#{id,jdbcType=INTEGER}
  </update>
  <update id="updateSelf">
    update user
    set nickName=#{nickName,jdbcType=VARCHAR},introduction=#{intro,jdbcType=VARCHAR}
    where id=#{id,jdbcType=INTEGER}
  </update>
</mapper>